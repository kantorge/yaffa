name: Deploy to private instance after release-please

on:
  workflow_run:
    workflows:
      - Release Please
    types:
      - completed

concurrency: production_environment

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: Private
    name: Deploy Tag to Production
    runs-on: ubuntu-latest

    steps:
      - name: Download "Release Please" output
        uses: actions/download-artifact@v4
        with:
          name: release-output

      - name: Read and evaluate output
        run: |
          output=$(cat release-created.txt)
          echo "Release Please Output: $output"
          if [ "$output" = "true" ]; then
            echo "::set-output name=release_created::true"
          else
            echo "::set-output name=release_created::false"
          fi

      - uses: actions/checkout@v4
        if: ${{ steps.output.outputs.release_created == 'true' }}

      - name: Setup PHP
        if: ${{ steps.output.outputs.release_created == 'true' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Get composer cache directory
        if: ${{ steps.output.outputs.release_created == 'true' }}
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        if: ${{ steps.output.outputs.release_created == 'true' }}
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        if: ${{ steps.output.outputs.release_created == 'true' }}
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Configure SSH
        if: ${{ steps.output.outputs.release_created == 'true' }}
        env:
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          echo "$SSH_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat >>~/.ssh/config <<END
            Host host_name
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          END

      - name: Deploy Yaffa
        if: ${{ steps.output.outputs.release_created == 'true' }}
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        uses: deployphp/action@master
        with:
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          dep: yaffa
