name: Automated Tests

on:
  push:
    # Ignore branches which are expected to have producion assets, and some tests would fail
    branches-ignore:
      - main
      - other/sandbox

    # Only run tests if relevant file types (php, js, css, etc) are changed
    paths:
      - '**.php'
      - '**.js'
      - '**.css'
      - '**.vue'
      - '**.scss'
      - '**.env.ci'
      - '**.env.dusk.ci'
      - '**.json'
      - '**.lock'
      - '**.xml'
      - '**.yml'
      - '**.gitignore'
      - '**.gitattributes'

jobs:
  phpunit:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: default
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: secretroot

        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug
        env:
          fail-fast: true

      - uses: actions/checkout@v4

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Get composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

      - name: Prepare Laravel Application
        run: ln -f -s .env.ci .env

      - name: Clear Config
        run: php artisan config:clear

      - name: Run Migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Run Testsuite
        run: vendor/bin/phpunit --colors=never --coverage-clover=coverage.xml --testsuite AllNonDusk
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Upload coverage to Codacy
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml -t ${{secrets.CODACY_PROJECT_TOKEN}}

  dusk-php:
    runs-on: ubuntu-latest
    env:
      APP_URL: "http://127.0.0.1:8000"
      DB_USERNAME: root
      DB_PASSWORD: root
      MAIL_MAILER: log
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, dom, fileinfo, mysql

      - name: Prepare The Environment
        run: cp .env.dusk.ci .env

      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE \`yaffa\` character set UTF8mb4 collate utf8mb4_bin;"

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Install Chrome 134
        run: |
          sudo apt-get remove -y google-chrome-stable
          wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_134.0.6998.165-1_amd64.deb
          sudo apt install ./google-chrome-stable_134.0.6998.165-1_amd64.deb

      - name: Install ChromeDriver 134
        run: |
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/134.0.6998.165/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          echo "CHROMEWEBDRIVER=/usr/local/bin" >> $GITHUB_ENV

      - name: Install Chrome for Dusk
        run: php artisan dusk:chrome-driver 134

      - name: Start ChromeDriver
        run: chromedriver --port=9515 &

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run dev

      - name: Run Laravel Server
        run: |
          php artisan serve --no-reload --host=127.0.0.1 --port=8000 &
          sleep 5

      - name: Run Dusk Tests
        run: php artisan dusk
        env:
          APP_URL: http://127.0.0.1:8000
          CHROMEWEBDRIVER: /usr/local/bin
          DUSK_DRIVER_URL: http://localhost:9515

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: console
          path: tests/Browser/console
