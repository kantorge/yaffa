on: push
name: CI
jobs:
  phpunit:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: yaffa
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secretroot

        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Setup PHP Action
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: xdebug
      env:
        fail-fast: true

    - uses: actions/checkout@v2

    - name: Start mysql service
      run: sudo /etc/init.d/mysql start
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        # Use composer.json for key, if composer.lock is not committed.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install composer dependencies
      run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

    - name: Prepare Laravel Application
      run: ln -f -s .env.ci .env

    - name: Clear Config
      run: php artisan config:clear

    - name: Run Migration
      run: php artisan migrate -v
      env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

    - name: Run Testsuite
      run: vendor/bin/phpunit --colors=never --verbose --coverage-clover=coverage.xml tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        name: codecov-umbrella
        fail_ci_if_error: true
      env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
